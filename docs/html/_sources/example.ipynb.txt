{
    "cells": [
        {
            "cell_type": "markdown",
            "metadata": {},
            "source": [
                "# Example usage\n",
                "\n",
                "To use `optigob` in a project:"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "from optigob.optigob import Optigob\n",
                "from optigob.resource_manager.optigob_data_manager import OptiGobDataManager\n",
                "from optigob.input_helper import InputHelper\n",
                "\n",
                "print(\"OptiGob Budget Model Input Combinations\")\n",
                "\n",
                "# Initialize the input helper\n",
                "helper = InputHelper()\n",
                "helper.print_all_combos()"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "data = './data/sip.yaml'\n",
                "# Initialize the data manager\n",
                "data_manager = OptiGobDataManager(data)\n",
                "\n",
                "# Create an instance of Optigob\n",
                "optigob = Optigob(data_manager)"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"GHG Emissions by Sector\")\n",
                "print(optigob.get_total_emissions_co2e_by_sector())\n",
                "print(optigob.get_total_emissions_co2e_by_sector_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Aggregated Total Land Area by Sector\")\n",
                "print(optigob.get_aggregated_total_land_area_by_sector())\n",
                "print(optigob.get_aggregated_total_land_area_by_sector_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Protein by Sector\")\n",
                "print(optigob.get_total_protein_by_sector())\n",
                "print(optigob.get_total_protein_by_sector_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Area by Sector\")\n",
                "print(optigob.get_disaggregated_total_land_area_by_sector())\n",
                "print(optigob.get_disaggregated_total_land_area_by_sector_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"High Nature Value (HNV) Land Area by Sector\")\n",
                "print(optigob.get_total_hnv_land_area_by_sector())\n",
                "print(optigob.get_total_hnv_land_area_by_sector_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Bioenergy by Sector\")\n",
                "print(optigob.get_bioenergy_by_sector())\n",
                "print(optigob.get_bioenergy_by_sector_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"HWP\")\n",
                "print(optigob.get_hwp_volume())\n",
                "print(optigob.get_hwp_volume_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Substitution\")\n",
                "print(optigob.get_substitution_emission_by_sector_co2e())\n",
                "print(optigob.get_substitution_emission_by_sector_co2e_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"NZ Status\")\n",
                "print(optigob.check_net_zero_status())\n",
                "print(f\"total emissions co2e: {optigob.total_emission_co2e()} kt\")"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Livestock Population\")\n",
                "print(optigob.get_livestock_population())\n",
                "print(optigob.get_livestock_population_df())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Livestock CH4 Emissions budget\")\n",
                "print(optigob.get_livestock_split_gas_ch4_emission_budget())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"Livestock CO2e Emissions budget\")\n",
                "print(optigob.get_livestock_co2e_emission_budget())"
            ]
        },
        {
            "cell_type": "code",
            "execution_count": null,
            "metadata": {},
            "outputs": [],
            "source": [
                "print(\"AREA comparison\")\n",
                "df = optigob.get_disaggregated_total_land_area_by_sector_df()\n",
                "print(df)\n",
                "print(\"\\nSum of each column:\")\n",
                "print(df.sum())"
            ]
        }
    ],
    "metadata": {
        "kernelspec": {
            "display_name": "Python 3",
            "language": "python",
            "name": "python3"
        },
        "language_info": {
            "codemirror_mode": {
                "name": "ipython",
                "version": 3
            },
            "file_extension": ".py",
            "mimetype": "text/x-python",
            "name": "python",
            "nbconvert_exporter": "python",
            "pygments_lexer": "ipython3",
            "version": "3.8.5"
        }
    },
    "nbformat": 4,
    "nbformat_minor": 4
}
